zapbuy_product:
  name: zapbuy_product_${self:provider.stage}
  handler: handlers/http/products.handler
  memorySize: 512
  timeout: 29
  layers:
    - arn:aws:lambda:${self:provider.region}:${aws:accountId}:layer:marshmallow:3
  package:
    include:
      - handlers/http/products.py
      - application/controllers/product/*.py
      - application/schemas/product/*.py
      - common/*.py
      - models/*.py
  iamRoleStatementsName: zapbuy_product_${self:provider.stage}_lambda_role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:UpdateItem
      Resource:
        - !GetAtt ZapBuyTable.Arn
        - !Join ['/', [!GetAtt ZapBuyTable.Arn, '*']]
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource:
        - !GetAtt ZapBuyBucket.Arn
        - !Join ['/', [!GetAtt ZapBuyBucket.Arn, '*']]
  events:
    - httpApi:
        method: GET
        path: /stores/{slug}/products
    - httpApi:
        method: GET
        path: /stores/{slug}/products/{product_id}
    - httpApi:
        method: POST
        path: /admin/stores/{slug}/products
        authorizer:
          name: ZapBuyAuthorizer
    - httpApi:
        method: POST
        path: /admin/stores/{slug}/products/{product_id}/action/upload
        authorizer:
          name: ZapBuyAuthorizer
    - httpApi:
        method: GET
        path: /admin/stores/{slug}/products
        authorizer:
          name: ZapBuyAuthorizer
    - httpApi:
        method: PUT
        path: /admin/stores/{slug}/products/{product_id}
        authorizer:
          name: ZapBuyAuthorizer

zapbuy_product_images:
  name: zapbuy_product_images_${self:provider.stage}
  handler: handlers/s3/products.handler
  memorySize: 256
  timeout: 29
  package:
    include:
      - handlers/s3/products.py
      - common/*.py
      - models/*.py
  iamRoleStatementsName: zapbuy_product_images_${self:provider.stage}_lambda_role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource: !GetAtt ZapBuyProductImagesQueue.Arn
  events:
    - s3:
        bucket: !Ref ZapBuyBucket
        existing: true
        event: s3:ObjectCreated:Put

zapbuy_process_product_images:
  name: zapbuy_process_product_images_${self:provider.stage}
  handler: handlers/sqs/products.handler
  memorySize: 512
  timeout: 29
  layers:
    - arn:aws:lambda:${self:provider.region}:${aws:accountId}:layer:marshmallow:3
    - arn:aws:lambda:${self:provider.region}:${aws:accountId}:layer:PillowLayer:1
  package:
    include:
      - handlers/sqs/products.py
      - common/*.py
      - models/*.py
  iamRoleStatementsName: zapbuy_process_product_images_${self:provider.stage}_lambda_role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:GetItem
        - dynamodb:Query
      Resource:
        - !GetAtt ZapBuyTable.Arn
        - !Join ['/', [!GetAtt ZapBuyTable.Arn, '*']]
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:ListBucket
      Resource:
        - !GetAtt ZapBuyBucket.Arn
        - !Join ['/', [!GetAtt ZapBuyBucket.Arn, '*']]
        - !GetAtt ZapBuyImagesBucket.Arn
        - !Join [ '/', [ !GetAtt ZapBuyImagesBucket.Arn, '*' ] ]
  events:
    - sqs:
        arn: !GetAtt ZapBuyProductImagesQueue.Arn
        batchSize: 1
